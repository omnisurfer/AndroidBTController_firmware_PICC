

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon May 25 10:48:32 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000D                     	;# 
    37  000E                     	;# 
    38  000E                     	;# 
    39  000F                     	;# 
    40  0010                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0014                     	;# 
    45  0015                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001C                     	;# 
    53  001D                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0087                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0093                     	;# 
    68  0093                     	;# 
    69  0094                     	;# 
    70  0095                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0096                     	;# 
    74  0097                     	;# 
    75  0098                     	;# 
    76  0099                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  010C                     	;# 
    82  010C                     	;# 
    83  010D                     	;# 
    84  010E                     	;# 
    85  010F                     	;# 
    86  0115                     	;# 
    87  0116                     	;# 
    88  0118                     	;# 
    89  0119                     	;# 
    90  011A                     	;# 
    91  011B                     	;# 
    92  011E                     	;# 
    93  011F                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96  019D                     	;# 
    97  019E                     	;# 
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  000E                     	;# 
   112  000F                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0014                     	;# 
   118  0015                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  0019                     	;# 
   124  001A                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0118                     	;# 
   162  0119                     	;# 
   163  011A                     	;# 
   164  011B                     	;# 
   165  011E                     	;# 
   166  011F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  019D                     	;# 
   170  019E                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  010C                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  0115                     	;# 
   233  0116                     	;# 
   234  0118                     	;# 
   235  0119                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011E                     	;# 
   239  011F                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  019D                     	;# 
   243  019E                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  008F                     	;# 
   283  0090                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0115                     	;# 
   306  0116                     	;# 
   307  0118                     	;# 
   308  0119                     	;# 
   309  011A                     	;# 
   310  011B                     	;# 
   311  011E                     	;# 
   312  011F                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  019D                     	;# 
   316  019E                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0095                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0115                     	;# 
   379  0116                     	;# 
   380  0118                     	;# 
   381  0119                     	;# 
   382  011A                     	;# 
   383  011B                     	;# 
   384  011E                     	;# 
   385  011F                     	;# 
   386  018C                     	;# 
   387  018D                     	;# 
   388  019D                     	;# 
   389  019E                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0115                     	;# 
   452  0116                     	;# 
   453  0118                     	;# 
   454  0119                     	;# 
   455  011A                     	;# 
   456  011B                     	;# 
   457  011E                     	;# 
   458  011F                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461  019D                     	;# 
   462  019E                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  000A                     	;# 
   472  000B                     	;# 
   473  000C                     	;# 
   474  000D                     	;# 
   475  000E                     	;# 
   476  000E                     	;# 
   477  000F                     	;# 
   478  0010                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0013                     	;# 
   482  0014                     	;# 
   483  0015                     	;# 
   484  0015                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001C                     	;# 
   491  001D                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  0081                     	;# 
   495  0085                     	;# 
   496  0086                     	;# 
   497  0087                     	;# 
   498  008C                     	;# 
   499  008D                     	;# 
   500  008E                     	;# 
   501  008F                     	;# 
   502  0090                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0095                     	;# 
   510  0096                     	;# 
   511  0096                     	;# 
   512  0097                     	;# 
   513  0098                     	;# 
   514  0099                     	;# 
   515  009A                     	;# 
   516  009B                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  010C                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010E                     	;# 
   523  010F                     	;# 
   524  0115                     	;# 
   525  0116                     	;# 
   526  0118                     	;# 
   527  0119                     	;# 
   528  011A                     	;# 
   529  011B                     	;# 
   530  011E                     	;# 
   531  011F                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  019D                     	;# 
   535  019E                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  000A                     	;# 
   545  000B                     	;# 
   546  000C                     	;# 
   547  000D                     	;# 
   548  000E                     	;# 
   549  000E                     	;# 
   550  000F                     	;# 
   551  0010                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0014                     	;# 
   556  0015                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001C                     	;# 
   564  001D                     	;# 
   565  001E                     	;# 
   566  001F                     	;# 
   567  0081                     	;# 
   568  0085                     	;# 
   569  0086                     	;# 
   570  0087                     	;# 
   571  008C                     	;# 
   572  008D                     	;# 
   573  008E                     	;# 
   574  008F                     	;# 
   575  0090                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0093                     	;# 
   579  0093                     	;# 
   580  0094                     	;# 
   581  0095                     	;# 
   582  0095                     	;# 
   583  0096                     	;# 
   584  0096                     	;# 
   585  0097                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009E                     	;# 
   591  009F                     	;# 
   592  010C                     	;# 
   593  010C                     	;# 
   594  010D                     	;# 
   595  010E                     	;# 
   596  010F                     	;# 
   597  0115                     	;# 
   598  0116                     	;# 
   599  0118                     	;# 
   600  0119                     	;# 
   601  011A                     	;# 
   602  011B                     	;# 
   603  011E                     	;# 
   604  011F                     	;# 
   605  018C                     	;# 
   606  018D                     	;# 
   607  019D                     	;# 
   608  019E                     	;# 
   609                           
   610                           	psect	idataBANK0
   611  0272                     __pidataBANK0:	
   612                           
   613                           ;initializer for main@F1559
   614  0272  34FD               	retlw	253
   615  0273  3400               	retlw	0
   616  0274  3400               	retlw	0
   617  0275  3400               	retlw	0
   618  0276  3400               	retlw	0
   619  0277  3400               	retlw	0
   620  0278  3400               	retlw	0
   621  0279  3400               	retlw	0
   622  027A  3400               	retlw	0
   623  000B                     _INTCONbits	set	11
   624  000C                     _PIR1bits	set	12
   625  0005                     _PORTA	set	5
   626  0005                     _PORTAbits	set	5
   627  0006                     _PORTB	set	6
   628  0006                     _PORTBbits	set	6
   629  0007                     _PORTC	set	7
   630  0007                     _PORTCbits	set	7
   631  0018                     _RCSTAbits	set	24
   632  0019                     _TXREG	set	25
   633  009B                     _BAUDCTLbits	set	155
   634  0081                     _OPTION_REGbits	set	129
   635  008F                     _OSCCONbits	set	143
   636  008C                     _PIE1bits	set	140
   637  0099                     _SPBRG	set	153
   638  009A                     _SPBRGH	set	154
   639  0085                     _TRISA	set	133
   640  0086                     _TRISB	set	134
   641  0086                     _TRISBbits	set	134
   642  0087                     _TRISC	set	135
   643  0098                     _TXSTAbits	set	152
   644  0095                     _WPUA	set	149
   645  011E                     _ANSEL	set	286
   646  011F                     _ANSELH	set	287
   647                           
   648                           ; #config settings
   649  0000                     
   650                           	psect	cinit
   651  0013                     start_initialization:	
   652  0013                     __initialization:	
   653                           
   654                           ; Clear objects allocated to COMMON
   655  0013  01F7               	clrf	__pbssCOMMON& (0+127)
   656                           
   657                           ; Clear objects allocated to BANK0
   658  0014  1383               	bcf	3,7	;select IRP bank0
   659  0015  303B               	movlw	low __pbssBANK0
   660  0016  0084               	movwf	4
   661  0017  304D               	movlw	low (__pbssBANK0+18)
   662  0018  118A  227B  118A   	fcall	clear_ram0
   663                           
   664                           ; Initialize objects allocated to BANK0
   665  001B  3056               	movlw	low (__pdataBANK0+9)
   666  001C  00FD               	movwf	btemp+-1
   667  001D  3002               	movlw	high __pidataBANK0
   668  001E  00FE               	movwf	btemp
   669  001F  3072               	movlw	low __pidataBANK0
   670  0020  00FF               	movwf	btemp+1
   671  0021  304D               	movlw	low __pdataBANK0
   672  0022  0084               	movwf	4
   673  0023  118A  224A         	fcall	init_ram0
   674  0025                     end_of_initialization:	
   675                           ;End of C runtime variable initialization code
   676                           
   677  0025                     __end_of__initialization:	
   678  0025  0183               	clrf	3
   679  0026  118A  2828         	ljmp	_main	;jump to C main() function
   680                           
   681                           	psect	bssCOMMON
   682  0077                     __pbssCOMMON:	
   683  0077                     _rawTick:	
   684  0077                     	ds	1
   685                           
   686                           	psect	bssBANK0
   687  003B                     __pbssBANK0:	
   688  003B                     _timerTicksX:	
   689  003B                     	ds	8
   690  0043                     main@F1555:	
   691  0043                     	ds	8
   692  004B                     _test:	
   693  004B                     	ds	2
   694                           
   695                           	psect	dataBANK0
   696  004D                     __pdataBANK0:	
   697  004D                     main@F1559:	
   698  004D                     	ds	9
   699                           
   700                           	psect	clrtext
   701  027B                     clear_ram0:	
   702                           ;	Called with FSR containing the base address, and
   703                           ;	W with the last address+1
   704                           
   705  027B  0064               	clrwdt	;clear the watchdog before getting into this loop
   706  027C                     clrloop0:	
   707  027C  0180               	clrf	0	;clear RAM location pointed to by FSR
   708  027D  0A84               	incf	4,f	;increment pointer
   709  027E  0604               	xorwf	4,w	;XOR with final address
   710  027F  1903               	btfsc	3,2	;have we reached the end yet?
   711  0280  3400               	retlw	0	;all done for this memory range, return
   712  0281  0604               	xorwf	4,w	;XOR again to restore value
   713  0282  2A7C               	goto	clrloop0	;do the next byte
   714                           
   715                           	psect	inittext
   716  0246                     init_fetch0:	
   717                           ;	Called with low address in FSR and high address in W
   718                           
   719  0246  087E               	movf	126,w
   720  0247  008A               	movwf	10
   721  0248  087F               	movf	127,w
   722  0249  0082               	movwf	2
   723  024A                     init_ram0:	
   724                           ;Called with:
   725                           ;	high address of idata address in btemp 
   726                           ;	low address of idata address in btemp+1 
   727                           ;	low address of data in FSR
   728                           ;	high address + 1 of data in btemp-1
   729                           
   730  024A  2246  118A         	fcall	init_fetch0
   731  024C  0080               	movwf	0
   732  024D  0A84               	incf	4,f
   733  024E  0804               	movf	4,w
   734  024F  067D               	xorwf	125,w
   735  0250  1903               	btfsc	3,2
   736  0251  3400               	retlw	0
   737  0252  0AFF               	incf	127,f
   738  0253  1903               	btfsc	3,2
   739  0254  0AFE               	incf	126,f
   740  0255  2A4A               	goto	init_ram0
   741                           
   742                           	psect	cstackCOMMON
   743  0070                     __pcstackCOMMON:	
   744  0070                     ?_isr:	
   745  0070                     ??_isr:	
   746                           ; 0 bytes @ 0x0
   747                           
   748  0070                     ?_ConfigureOscillator:	
   749                           ; 0 bytes @ 0x0
   750                           
   751  0070                     ?_TimerDaemon:	
   752                           ; 0 bytes @ 0x0
   753                           
   754  0070                     ?_InitializeUART:	
   755                           ; 0 bytes @ 0x0
   756                           
   757  0070                     ?_InitApp:	
   758                           ; 0 bytes @ 0x0
   759                           
   760  0070                     ?_main:	
   761                           ; 0 bytes @ 0x0
   762                           
   763                           
   764                           ; 0 bytes @ 0x0
   765  0070                     	ds	5
   766  0075                     ??_ConfigureOscillator:	
   767  0075                     ??_TimerDaemon:	
   768                           ; 0 bytes @ 0x5
   769                           
   770  0075                     ??_InitializeUART:	
   771                           ; 0 bytes @ 0x5
   772                           
   773  0075                     ?_UARTTransmit:	
   774                           ; 0 bytes @ 0x5
   775                           
   776  0075                     ??_InitApp:	
   777                           ; 0 bytes @ 0x5
   778                           
   779  0075                     ?_WritePin:	
   780                           ; 0 bytes @ 0x5
   781                           
   782  0075                     WritePin@pinName:	
   783                           ; 1 bytes @ 0x5
   784                           
   785  0075                     UARTTransmit@b:	
   786                           ; 1 bytes @ 0x5
   787                           
   788                           
   789                           ; 2 bytes @ 0x5
   790  0075                     	ds	1
   791  0076                     WritePin@state:	
   792  0076                     TimerDaemon@timerTicks:	
   793                           ; 1 bytes @ 0x6
   794                           
   795                           
   796                           ; 1 bytes @ 0x6
   797  0076                     	ds	1
   798  0077                     ??_WritePin:	
   799  0077                     ??_UARTTransmit:	
   800                           ; 0 bytes @ 0x7
   801                           
   802                           
   803                           	psect	cstackBANK0
   804  0020                     __pcstackBANK0:	
   805                           ; 0 bytes @ 0x7
   806                           
   807  0020                     WritePin@portName:	
   808                           
   809                           ; 1 bytes @ 0x0
   810  0020                     	ds	1
   811  0021                     WritePin@outOfBound:	
   812                           
   813                           ; 1 bytes @ 0x1
   814  0021                     	ds	1
   815  0022                     ??_main:	
   816                           
   817                           ; 0 bytes @ 0x2
   818  0022                     	ds	4
   819  0026                     main@buttonOK:	
   820                           
   821                           ; 1 bytes @ 0x6
   822  0026                     	ds	1
   823  0027                     main@temp:	
   824                           
   825                           ; 9 bytes @ 0x7
   826  0027                     	ds	9
   827  0030                     main@i:	
   828                           
   829                           ; 2 bytes @ 0x10
   830  0030                     	ds	2
   831  0032                     main@debugTrigger:	
   832                           
   833                           ; 1 bytes @ 0x12
   834  0032                     	ds	1
   835  0033                     main@timerTicks:	
   836                           
   837                           ; 8 bytes @ 0x13
   838  0033                     	ds	8
   839                           
   840                           	psect	maintext
   841  0028                     __pmaintext:	
   842 ;;
   843 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   844 ;;
   845 ;; *************** function _main *****************
   846 ;; Defined at:
   847 ;;		line 51 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  temp            9    7[BANK0 ] unsigned char [9]
   852 ;;  i               2   16[BANK0 ] int 
   853 ;;  timerTicks      8   19[BANK0 ] struct SYSTEM_TIMERS
   854 ;;  debugTrigger    1   18[BANK0 ] unsigned char 
   855 ;;  buttonOK        1    6[BANK0 ] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;		None               void
   858 ;; Registers used:
   859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : B00/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   865 ;;      Params:         0       0       0       0
   866 ;;      Locals:         0      21       0       0
   867 ;;      Temps:          0       4       0       0
   868 ;;      Totals:         0      25       0       0
   869 ;;Total ram usage:       25 bytes
   870 ;; Hardware stack levels required when called:    2
   871 ;; This function calls:
   872 ;;		_ConfigureOscillator
   873 ;;		_InitApp
   874 ;;		_InitializeUART
   875 ;;		_TimerDaemon
   876 ;;		_UARTTransmit
   877 ;;		_WritePin
   878 ;; This function is called by:
   879 ;;		Startup code after reset
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _main
   885  0028                     _main:	
   886                           
   887                           ;main.c: 54: ConfigureOscillator();
   888                           
   889                           ;incstack = 0
   890                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   891  0028  118A  2283  118A   	fcall	_ConfigureOscillator
   892                           
   893                           ;main.c: 57: InitApp();
   894  002B  118A  2216  118A   	fcall	_InitApp
   895                           
   896                           ;main.c: 59: InitializeUART();
   897  002E  118A  2233  118A   	fcall	_InitializeUART
   898                           
   899                           ;main.c: 61: struct SYSTEM_TIMERS timerTicks =
   900                           ;main.c: 62: {
   901                           ;main.c: 63: {0},
   902                           ;main.c: 64: {0},
   903                           ;main.c: 65: {0},
   904                           ;main.c: 66: {0},
   905                           ;main.c: 68: {0},
   906                           ;main.c: 69: {0},
   907                           ;main.c: 70: {0},
   908                           ;main.c: 71: {0}
   909                           ;main.c: 72: };
   910  0031  3033               	movlw	main@timerTicks& (0+255)
   911  0032  0084               	movwf	4
   912  0033  3043               	movlw	low main@F1555
   913  0034  1283               	bcf	3,5	;RP0=0, select bank0
   914  0035  1303               	bcf	3,6	;RP1=0, select bank0
   915  0036  00A2               	movwf	??_main
   916  0037  0804               	movf	4,w
   917  0038  00A3               	movwf	??_main+1
   918  0039  3008               	movlw	8
   919  003A  00A4               	movwf	??_main+2
   920  003B                     u490:	
   921  003B  0822               	movf	??_main,w
   922  003C  0084               	movwf	4
   923  003D  1383               	bcf	3,7	;select IRP bank0
   924  003E  0800               	movf	0,w
   925  003F  00A5               	movwf	??_main+3
   926  0040  0AA2               	incf	??_main,f
   927  0041  0823               	movf	??_main+1,w
   928  0042  0084               	movwf	4
   929  0043  0825               	movf	??_main+3,w
   930  0044  0080               	movwf	0
   931  0045  0AA3               	incf	??_main+1,f
   932  0046  0BA4               	decfsz	??_main+2,f
   933  0047  283B               	goto	u490
   934                           
   935                           ;main.c: 74: char debugTrigger = 0;
   936  0048  01B2               	clrf	main@debugTrigger
   937                           
   938                           ;main.c: 77: bool buttonOK = 0;
   939  0049  01A6               	clrf	main@buttonOK
   940                           
   941                           ;main.c: 80: WritePin(PORT_C, PIN_4, 1);
   942  004A  3004               	movlw	4
   943  004B                     L2:	
   944  004B  00A2               	movwf	??_main
   945  004C  0822               	movf	??_main,w
   946  004D  00F5               	movwf	WritePin@pinName
   947  004E  01F6               	clrf	WritePin@state
   948  004F  0AF6               	incf	WritePin@state,f
   949  0050                     L3:	
   950  0050  3002               	movlw	2
   951  0051  118A  20DB  118A   	fcall	_WritePin
   952                           
   953                           ;main.c: 85: {
   954                           ;main.c: 87: TimerDaemon(&timerTicks);
   955                           
   956                           ;main.c: 84: while(1)
   957  0054  3033               	movlw	(low (main@timerTicks| 0))& (0+255)
   958  0055  118A  218D  118A   	fcall	_TimerDaemon
   959                           
   960                           ;main.c: 105: if((&timerTicks)->baseClock_1000msTick == debugTrigger)
   961  0058  1283               	bcf	3,5	;RP0=0, select bank0
   962  0059  1303               	bcf	3,6	;RP1=0, select bank0
   963  005A  083A               	movf	main@timerTicks+7,w
   964  005B  0632               	xorwf	main@debugTrigger,w
   965  005C  1D03               	skipz
   966  005D  28CE               	goto	l218
   967                           
   968                           ;main.c: 106: {
   969                           ;main.c: 112: char temp[] = {0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
   970  005E  3027               	movlw	main@temp& (0+255)
   971  005F  0084               	movwf	4
   972  0060  304D               	movlw	low main@F1559
   973  0061  00A2               	movwf	??_main
   974  0062  0804               	movf	4,w
   975  0063  00A3               	movwf	??_main+1
   976  0064  3009               	movlw	9
   977  0065  00A4               	movwf	??_main+2
   978  0066                     u510:	
   979  0066  0822               	movf	??_main,w
   980  0067  0084               	movwf	4
   981  0068  1383               	bcf	3,7	;select IRP bank0
   982  0069  0800               	movf	0,w
   983  006A  00A5               	movwf	??_main+3
   984  006B  0AA2               	incf	??_main,f
   985  006C  0823               	movf	??_main+1,w
   986  006D  0084               	movwf	4
   987  006E  0825               	movf	??_main+3,w
   988  006F  0080               	movwf	0
   989  0070  0AA3               	incf	??_main+1,f
   990  0071  0BA4               	decfsz	??_main+2,f
   991  0072  2866               	goto	u510
   992                           
   993                           ;main.c: 114: int i = 0;
   994  0073  01B0               	clrf	main@i
   995  0074  01B1               	clrf	main@i+1
   996                           
   997                           ;main.c: 116: if(test == 0)
   998  0075  084B               	movf	_test,w
   999  0076  044C               	iorwf	_test+1,w
  1000  0077  1D03               	btfss	3,2
  1001  0078  287F               	goto	l1307
  1002                           
  1003                           ;main.c: 117: {
  1004                           ;main.c: 118: temp[1] = 0x04;
  1005  0079  3004               	movlw	4
  1006  007A  00A2               	movwf	??_main
  1007  007B  0822               	movf	??_main,w
  1008  007C  00A8               	movwf	main@temp+1
  1009                           
  1010                           ;main.c: 119: temp[3] = 0x2B;
  1011  007D  302B               	movlw	43
  1012  007E  2888               	goto	L1
  1013  007F                     l1307:	
  1014                           ;main.c: 121: }
  1015                           
  1016                           ;main.c: 120: test++;
  1017                           
  1018                           
  1019                           ;main.c: 123: else if (test == 1)
  1020  007F  034B               	decf	_test,w
  1021  0080  044C               	iorwf	_test+1,w
  1022  0081  1D03               	btfss	3,2
  1023  0082  2892               	goto	l1311
  1024                           
  1025                           ;main.c: 124: {
  1026                           ;main.c: 125: temp[1] = 0x04;
  1027  0083  3004               	movlw	4
  1028  0084  00A2               	movwf	??_main
  1029  0085  0822               	movf	??_main,w
  1030  0086  00A8               	movwf	main@temp+1
  1031                           
  1032                           ;main.c: 126: temp[3] = 0x90;
  1033  0087  3090               	movlw	144
  1034  0088                     L1:	
  1035  0088  00A2               	movwf	??_main
  1036  0089  0822               	movf	??_main,w
  1037  008A  00AA               	movwf	main@temp+3
  1038                           
  1039                           ;main.c: 127: test++;
  1040  008B  3001               	movlw	1
  1041  008C  07CB               	addwf	_test,f
  1042  008D  1803               	skipnc
  1043  008E  0ACC               	incf	_test+1,f
  1044  008F  3000               	movlw	0
  1045  0090  07CC               	addwf	_test+1,f
  1046                           
  1047                           ;main.c: 128: }
  1048  0091  289B               	goto	l1315
  1049  0092                     l1311:	
  1050                           
  1051                           ;main.c: 130: else if(test == 2)
  1052  0092  3002               	movlw	2
  1053  0093  064B               	xorwf	_test,w
  1054  0094  044C               	iorwf	_test+1,w
  1055  0095  1D03               	btfss	3,2
  1056  0096  289B               	goto	l1315
  1057                           
  1058                           ;main.c: 131: {
  1059                           ;main.c: 132: temp[1] = 0x00;
  1060  0097  01A8               	clrf	main@temp+1
  1061                           
  1062                           ;main.c: 133: temp[3] = 0x00;
  1063  0098  01AA               	clrf	main@temp+3
  1064                           
  1065                           ;main.c: 134: test = 0;
  1066  0099  01CB               	clrf	_test
  1067  009A  01CC               	clrf	_test+1
  1068  009B                     l1315:	
  1069                           ;main.c: 135: }
  1070                           ;main.c: 137: do
  1071                           
  1072                           
  1073                           ;main.c: 138: {
  1074                           ;main.c: 139: if(TXSTAbits.TRMT == 1)
  1075  009B  1683               	bsf	3,5	;RP0=1, select bank1
  1076  009C  1303               	bcf	3,6	;RP1=0, select bank1
  1077  009D  1C98               	btfss	24,1	;volatile
  1078  009E  28B7               	goto	l1321
  1079                           
  1080                           ;main.c: 140: {
  1081                           ;main.c: 141: UARTTransmit(temp[i]);
  1082  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1083  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1084  00A1  0830               	movf	main@i,w
  1085  00A2  3E27               	addlw	(low (main@temp| 0))& (0+255)
  1086  00A3  0084               	movwf	4
  1087  00A4  1383               	bcf	3,7	;select IRP bank0
  1088  00A5  0800               	movf	0,w
  1089  00A6  00A2               	movwf	??_main
  1090  00A7  01A3               	clrf	??_main+1
  1091  00A8  0822               	movf	??_main,w
  1092  00A9  00F5               	movwf	UARTTransmit@b
  1093  00AA  0823               	movf	??_main+1,w
  1094  00AB  00F6               	movwf	UARTTransmit@b+1
  1095  00AC  118A  228A  118A   	fcall	_UARTTransmit
  1096                           
  1097                           ;main.c: 142: i++;
  1098  00AF  3001               	movlw	1
  1099  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1100  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1101  00B2  07B0               	addwf	main@i,f
  1102  00B3  1803               	skipnc
  1103  00B4  0AB1               	incf	main@i+1,f
  1104  00B5  3000               	movlw	0
  1105  00B6  07B1               	addwf	main@i+1,f
  1106  00B7                     l1321:	
  1107                           
  1108                           ;main.c: 143: }
  1109                           ;main.c: 144: }while(i < 9);
  1110  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1111  00B8  0831               	movf	main@i+1,w
  1112  00B9  3A80               	xorlw	128
  1113  00BA  00FF               	movwf	127
  1114  00BB  3080               	movlw	128
  1115  00BC  027F               	subwf	127,w
  1116  00BD  1D03               	skipz
  1117  00BE  28C1               	goto	u565
  1118  00BF  3009               	movlw	9
  1119  00C0  0230               	subwf	main@i,w
  1120  00C1                     u565:	
  1121  00C1  1C03               	skipc
  1122  00C2  289B               	goto	l1315
  1123                           
  1124                           ;main.c: 146: debugTrigger = !debugTrigger;
  1125  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1126  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1127  00C5  0832               	movf	main@debugTrigger,w
  1128  00C6  1D03               	btfss	3,2
  1129  00C7  28CA               	goto	u570
  1130  00C8  3001               	movlw	1
  1131  00C9  28CB               	goto	u580
  1132  00CA                     u570:	
  1133  00CA  3000               	movlw	0
  1134  00CB                     u580:	
  1135  00CB  00A2               	movwf	??_main
  1136  00CC  0822               	movf	??_main,w
  1137  00CD  00B2               	movwf	main@debugTrigger
  1138  00CE                     l218:	
  1139                           
  1140                           ;main.c: 147: }
  1141                           ;main.c: 149: if((&timerTicks)->baseClock_1000msTick == 1)
  1142  00CE  033A               	decf	main@timerTicks+7,w
  1143  00CF  1D03               	btfss	3,2
  1144  00D0  28D3               	goto	l1327
  1145                           
  1146                           ;main.c: 150: WritePin(PORT_C, PIN_7, 1);
  1147  00D1  3007               	movlw	7
  1148  00D2  284B               	goto	L2
  1149  00D3                     l1327:	
  1150                           
  1151                           ;main.c: 151: else
  1152                           ;main.c: 152: WritePin(PORT_C, PIN_7, 0);
  1153  00D3  3007               	movlw	7
  1154  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1155  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1156  00D6  00A2               	movwf	??_main
  1157  00D7  0822               	movf	??_main,w
  1158  00D8  00F5               	movwf	WritePin@pinName
  1159  00D9  01F6               	clrf	WritePin@state
  1160  00DA  2850               	goto	L3
  1161  00DB                     __end_of_main:	
  1162                           
  1163                           	psect	text1
  1164  00DB                     __ptext1:	
  1165 ;; *************** function _WritePin *****************
  1166 ;; Defined at:
  1167 ;;		line 62 in file "port_hal.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  portName        1    wreg     enum E30
  1170 ;;  pinName         1    5[COMMON] enum E35
  1171 ;;  state           1    6[COMMON] unsigned char 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  portName        1    0[BANK0 ] enum E30
  1174 ;;  outOfBound      1    1[BANK0 ] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      unsigned char 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1184 ;;      Params:         2       0       0       0
  1185 ;;      Locals:         0       2       0       0
  1186 ;;      Temps:          0       0       0       0
  1187 ;;      Totals:         2       2       0       0
  1188 ;;Total ram usage:        4 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _WritePin
  1200  00DB                     _WritePin:	
  1201                           
  1202                           ;incstack = 0
  1203                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
  1204                           ;WritePin@portName stored from wreg
  1205  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1206  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1207  00DD  00A0               	movwf	WritePin@portName
  1208                           
  1209                           ;port_hal.c: 64: bool outOfBound = 0;
  1210  00DE  01A1               	clrf	WritePin@outOfBound
  1211                           
  1212                           ;port_hal.c: 66: switch(portName)
  1213  00DF  2981               	goto	l1275
  1214  00E0                     l1225:	
  1215                           ;port_hal.c: 70: {
  1216                           ;port_hal.c: 71: case PIN_0:
  1217                           
  1218                           ;port_hal.c: 69: switch(pinName)
  1219                           
  1220                           ;port_hal.c: 67: {
  1221                           ;port_hal.c: 68: case PORT_A:
  1222                           
  1223                           
  1224                           ;port_hal.c: 72: PORTAbits.RA0 = state;
  1225  00E0  0876               	movf	WritePin@state,w
  1226  00E1  1D03               	skipz
  1227  00E2  1405               	bsf	5,0	;volatile
  1228  00E3  1903               	skipnz
  1229  00E4  1005               	bcf	5,0	;volatile
  1230                           
  1231                           ;port_hal.c: 73: break;
  1232  00E5  0008               	return
  1233  00E6                     l1227:	
  1234                           ;port_hal.c: 75: case PIN_1:
  1235                           
  1236                           
  1237                           ;port_hal.c: 76: PORTAbits.RA1 = state;
  1238  00E6  0876               	movf	WritePin@state,w
  1239  00E7  1D03               	skipz
  1240  00E8  1485               	bsf	5,1	;volatile
  1241  00E9  1903               	skipnz
  1242  00EA  1085               	bcf	5,1	;volatile
  1243                           
  1244                           ;port_hal.c: 77: break;
  1245  00EB  0008               	return
  1246  00EC                     l1229:	
  1247                           ;port_hal.c: 79: case PIN_2:
  1248                           
  1249                           
  1250                           ;port_hal.c: 80: PORTAbits.RA2 = state;
  1251  00EC  0876               	movf	WritePin@state,w
  1252  00ED  1D03               	skipz
  1253  00EE  1505               	bsf	5,2	;volatile
  1254  00EF  1903               	skipnz
  1255  00F0  1105               	bcf	5,2	;volatile
  1256                           
  1257                           ;port_hal.c: 81: break;
  1258  00F1  0008               	return
  1259  00F2                     l1231:	
  1260                           ;port_hal.c: 83: case PIN_3:
  1261                           
  1262                           
  1263                           ;port_hal.c: 84: PORTAbits.RA3 = state;
  1264  00F2  0876               	movf	WritePin@state,w
  1265  00F3  1D03               	skipz
  1266  00F4  1585               	bsf	5,3	;volatile
  1267  00F5  1903               	skipnz
  1268  00F6  1185               	bcf	5,3	;volatile
  1269                           
  1270                           ;port_hal.c: 85: break;
  1271  00F7  0008               	return
  1272  00F8                     l1233:	
  1273                           ;port_hal.c: 87: case PIN_4:
  1274                           
  1275                           
  1276                           ;port_hal.c: 88: PORTAbits.RA4 = state;
  1277  00F8  0876               	movf	WritePin@state,w
  1278  00F9  1D03               	skipz
  1279  00FA  1605               	bsf	5,4	;volatile
  1280  00FB  1903               	skipnz
  1281  00FC  1205               	bcf	5,4	;volatile
  1282                           
  1283                           ;port_hal.c: 89: break;
  1284  00FD  0008               	return
  1285  00FE                     l1235:	
  1286                           ;port_hal.c: 91: case PIN_5:
  1287                           
  1288                           
  1289                           ;port_hal.c: 92: PORTAbits.RA5 = state;
  1290  00FE  0876               	movf	WritePin@state,w
  1291  00FF  1D03               	skipz
  1292  0100  1685               	bsf	5,5	;volatile
  1293  0101  1903               	skipnz
  1294  0102  1285               	bcf	5,5	;volatile
  1295                           
  1296                           ;port_hal.c: 93: break;
  1297  0103  0008               	return
  1298  0104                     l43:	
  1299                           ;port_hal.c: 95: default:
  1300                           
  1301                           
  1302                           ;port_hal.c: 96: outOfBound = 1;
  1303  0104  01A1               	clrf	WritePin@outOfBound
  1304  0105  0AA1               	incf	WritePin@outOfBound,f
  1305                           
  1306                           ;port_hal.c: 98: }
  1307                           
  1308                           ;port_hal.c: 97: break;
  1309  0106  0008               	return
  1310  0107                     l1239:	
  1311  0107  0875               	movf	WritePin@pinName,w
  1312                           
  1313                           ; Switch size 1, requested type "space"
  1314                           ; Number of cases is 6, Range of values is 0 to 5
  1315                           ; switch strategies available:
  1316                           ; Name         Instructions Cycles
  1317                           ; direct_byte           19     7 (fixed)
  1318                           ; simple_byte           19    10 (average)
  1319                           ; jumptable            260     6 (fixed)
  1320                           ;	Chosen strategy is direct_byte
  1321  0108  0084               	movwf	4
  1322  0109  3006               	movlw	6
  1323  010A  0204               	subwf	4,w
  1324  010B  1803               	skipnc
  1325  010C  2904               	goto	l43
  1326  010D  3002               	movlw	high S1369
  1327  010E  008A               	movwf	10
  1328  010F  1003               	clrc
  1329  0110  0D04               	rlf	4,w
  1330  0111  3E66               	addlw	low S1369
  1331  0112  0082               	movwf	2
  1332                           
  1333                           ;port_hal.c: 99: break;
  1334  0113  0008               	return
  1335  0114                     l1241:	
  1336                           ;port_hal.c: 103: {
  1337                           ;port_hal.c: 104: case PIN_4:
  1338                           
  1339                           ;port_hal.c: 102: switch(pinName)
  1340                           
  1341                           ;port_hal.c: 101: case PORT_B:
  1342                           
  1343                           
  1344                           ;port_hal.c: 105: PORTBbits.RB4 = state;
  1345  0114  0876               	movf	WritePin@state,w
  1346  0115  1D03               	skipz
  1347  0116  1606               	bsf	6,4	;volatile
  1348  0117  1903               	skipnz
  1349  0118  1206               	bcf	6,4	;volatile
  1350                           
  1351                           ;port_hal.c: 106: break;
  1352  0119  0008               	return
  1353  011A                     l1243:	
  1354                           ;port_hal.c: 108: case PIN_5:
  1355                           
  1356                           
  1357                           ;port_hal.c: 109: PORTBbits.RB5 = state;
  1358  011A  0876               	movf	WritePin@state,w
  1359  011B  1D03               	skipz
  1360  011C  1686               	bsf	6,5	;volatile
  1361  011D  1903               	skipnz
  1362  011E  1286               	bcf	6,5	;volatile
  1363                           
  1364                           ;port_hal.c: 110: break;
  1365  011F  0008               	return
  1366  0120                     l1245:	
  1367                           ;port_hal.c: 112: case PIN_6:
  1368                           
  1369                           
  1370                           ;port_hal.c: 113: PORTBbits.RB6 = state;
  1371  0120  0876               	movf	WritePin@state,w
  1372  0121  1D03               	skipz
  1373  0122  1706               	bsf	6,6	;volatile
  1374  0123  1903               	skipnz
  1375  0124  1306               	bcf	6,6	;volatile
  1376                           
  1377                           ;port_hal.c: 114: break;
  1378  0125  0008               	return
  1379  0126                     l1247:	
  1380                           ;port_hal.c: 116: case PIN_7:
  1381                           
  1382                           
  1383                           ;port_hal.c: 117: PORTBbits.RB7 = state;
  1384  0126  0876               	movf	WritePin@state,w
  1385  0127  1D03               	skipz
  1386  0128  1786               	bsf	6,7	;volatile
  1387  0129  1903               	skipnz
  1388  012A  1386               	bcf	6,7	;volatile
  1389                           
  1390                           ;port_hal.c: 118: break;
  1391  012B  0008               	return
  1392  012C                     l52:	
  1393                           ;port_hal.c: 120: default:
  1394                           
  1395                           
  1396                           ;port_hal.c: 121: outOfBound = 1;
  1397  012C  01A1               	clrf	WritePin@outOfBound
  1398  012D  0AA1               	incf	WritePin@outOfBound,f
  1399                           
  1400                           ;port_hal.c: 123: }
  1401                           
  1402                           ;port_hal.c: 122: break;
  1403  012E  0008               	return
  1404  012F                     l1251:	
  1405  012F  0875               	movf	WritePin@pinName,w
  1406                           
  1407                           ; Switch size 1, requested type "space"
  1408                           ; Number of cases is 4, Range of values is 4 to 7
  1409                           ; switch strategies available:
  1410                           ; Name         Instructions Cycles
  1411                           ; simple_byte           13     7 (average)
  1412                           ; direct_byte           18    10 (fixed)
  1413                           ; jumptable            263     9 (fixed)
  1414                           ;	Chosen strategy is simple_byte
  1415  0130  3A04               	xorlw	4	; case 4
  1416  0131  1903               	skipnz
  1417  0132  2914               	goto	l1241
  1418  0133  3A01               	xorlw	1	; case 5
  1419  0134  1903               	skipnz
  1420  0135  291A               	goto	l1243
  1421  0136  3A03               	xorlw	3	; case 6
  1422  0137  1903               	skipnz
  1423  0138  2920               	goto	l1245
  1424  0139  3A01               	xorlw	1	; case 7
  1425  013A  1903               	skipnz
  1426  013B  2926               	goto	l1247
  1427  013C  292C               	goto	l52
  1428                           
  1429                           ;port_hal.c: 124: break;
  1430  013D  0008               	return
  1431  013E                     l1253:	
  1432                           ;port_hal.c: 128: {
  1433                           ;port_hal.c: 129: case PIN_0:
  1434                           
  1435                           ;port_hal.c: 127: switch(pinName)
  1436                           
  1437                           ;port_hal.c: 126: case PORT_C:
  1438                           
  1439                           
  1440                           ;port_hal.c: 130: PORTCbits.RC0 = state;
  1441  013E  0876               	movf	WritePin@state,w
  1442  013F  1D03               	skipz
  1443  0140  1407               	bsf	7,0	;volatile
  1444  0141  1903               	skipnz
  1445  0142  1007               	bcf	7,0	;volatile
  1446                           
  1447                           ;port_hal.c: 131: break;
  1448  0143  0008               	return
  1449  0144                     l1255:	
  1450                           ;port_hal.c: 133: case PIN_1:
  1451                           
  1452                           
  1453                           ;port_hal.c: 134: PORTCbits.RC1 = state;
  1454  0144  0876               	movf	WritePin@state,w
  1455  0145  1D03               	skipz
  1456  0146  1487               	bsf	7,1	;volatile
  1457  0147  1903               	skipnz
  1458  0148  1087               	bcf	7,1	;volatile
  1459                           
  1460                           ;port_hal.c: 135: break;
  1461  0149  0008               	return
  1462  014A                     l1257:	
  1463                           ;port_hal.c: 137: case PIN_2:
  1464                           
  1465                           
  1466                           ;port_hal.c: 138: PORTCbits.RC2 = state;
  1467  014A  0876               	movf	WritePin@state,w
  1468  014B  1D03               	skipz
  1469  014C  1507               	bsf	7,2	;volatile
  1470  014D  1903               	skipnz
  1471  014E  1107               	bcf	7,2	;volatile
  1472                           
  1473                           ;port_hal.c: 139: break;
  1474  014F  0008               	return
  1475  0150                     l1259:	
  1476                           ;port_hal.c: 141: case PIN_3:
  1477                           
  1478                           
  1479                           ;port_hal.c: 142: PORTCbits.RC3 = state;
  1480  0150  0876               	movf	WritePin@state,w
  1481  0151  1D03               	skipz
  1482  0152  1587               	bsf	7,3	;volatile
  1483  0153  1903               	skipnz
  1484  0154  1187               	bcf	7,3	;volatile
  1485                           
  1486                           ;port_hal.c: 143: break;
  1487  0155  0008               	return
  1488  0156                     l1261:	
  1489                           ;port_hal.c: 145: case PIN_4:
  1490                           
  1491                           
  1492                           ;port_hal.c: 146: PORTCbits.RC4 = state;
  1493  0156  0876               	movf	WritePin@state,w
  1494  0157  1D03               	skipz
  1495  0158  1607               	bsf	7,4	;volatile
  1496  0159  1903               	skipnz
  1497  015A  1207               	bcf	7,4	;volatile
  1498                           
  1499                           ;port_hal.c: 147: break;
  1500  015B  0008               	return
  1501  015C                     l1263:	
  1502                           ;port_hal.c: 149: case PIN_5:
  1503                           
  1504                           
  1505                           ;port_hal.c: 150: PORTCbits.RC5 = state;
  1506  015C  0876               	movf	WritePin@state,w
  1507  015D  1D03               	skipz
  1508  015E  1687               	bsf	7,5	;volatile
  1509  015F  1903               	skipnz
  1510  0160  1287               	bcf	7,5	;volatile
  1511                           
  1512                           ;port_hal.c: 151: break;
  1513  0161  0008               	return
  1514  0162                     l1265:	
  1515                           ;port_hal.c: 153: case PIN_6:
  1516                           
  1517                           
  1518                           ;port_hal.c: 154: PORTCbits.RC6 = state;
  1519  0162  0876               	movf	WritePin@state,w
  1520  0163  1D03               	skipz
  1521  0164  1707               	bsf	7,6	;volatile
  1522  0165  1903               	skipnz
  1523  0166  1307               	bcf	7,6	;volatile
  1524                           
  1525                           ;port_hal.c: 155: break;
  1526  0167  0008               	return
  1527  0168                     l1267:	
  1528                           ;port_hal.c: 157: case PIN_7:
  1529                           
  1530                           
  1531                           ;port_hal.c: 158: PORTCbits.RC7 = state;
  1532  0168  0876               	movf	WritePin@state,w
  1533  0169  1D03               	skipz
  1534  016A  1787               	bsf	7,7	;volatile
  1535  016B  1903               	skipnz
  1536  016C  1387               	bcf	7,7	;volatile
  1537                           
  1538                           ;port_hal.c: 159: break;
  1539  016D  0008               	return
  1540  016E                     l64:	
  1541                           ;port_hal.c: 161: default:
  1542                           
  1543                           
  1544                           ;port_hal.c: 162: outOfBound = 1;
  1545  016E  01A1               	clrf	WritePin@outOfBound
  1546  016F  0AA1               	incf	WritePin@outOfBound,f
  1547                           
  1548                           ;port_hal.c: 164: }
  1549                           
  1550                           ;port_hal.c: 163: break;
  1551  0170  0008               	return
  1552  0171                     l1271:	
  1553  0171  0875               	movf	WritePin@pinName,w
  1554                           
  1555                           ; Switch size 1, requested type "space"
  1556                           ; Number of cases is 8, Range of values is 0 to 7
  1557                           ; switch strategies available:
  1558                           ; Name         Instructions Cycles
  1559                           ; direct_byte           23     7 (fixed)
  1560                           ; simple_byte           25    13 (average)
  1561                           ; jumptable            260     6 (fixed)
  1562                           ;	Chosen strategy is direct_byte
  1563  0172  0084               	movwf	4
  1564  0173  3008               	movlw	8
  1565  0174  0204               	subwf	4,w
  1566  0175  1803               	skipnc
  1567  0176  296E               	goto	l64
  1568  0177  3002               	movlw	high S1371
  1569  0178  008A               	movwf	10
  1570  0179  1003               	clrc
  1571  017A  0D04               	rlf	4,w
  1572  017B  3E56               	addlw	low S1371
  1573  017C  0082               	movwf	2
  1574                           
  1575                           ;port_hal.c: 165: break;
  1576  017D  0008               	return
  1577  017E                     l65:	
  1578                           ;port_hal.c: 167: default:
  1579                           
  1580                           
  1581                           ;port_hal.c: 168: outOfBound = 1;
  1582  017E  01A1               	clrf	WritePin@outOfBound
  1583  017F  0AA1               	incf	WritePin@outOfBound,f
  1584                           
  1585                           ;port_hal.c: 170: }
  1586                           
  1587                           ;port_hal.c: 169: break;
  1588  0180  0008               	return
  1589  0181                     l1275:	
  1590  0181  0820               	movf	WritePin@portName,w
  1591                           
  1592                           ; Switch size 1, requested type "space"
  1593                           ; Number of cases is 3, Range of values is 0 to 2
  1594                           ; switch strategies available:
  1595                           ; Name         Instructions Cycles
  1596                           ; simple_byte           10     6 (average)
  1597                           ; direct_byte           13     7 (fixed)
  1598                           ; jumptable            260     6 (fixed)
  1599                           ;	Chosen strategy is simple_byte
  1600  0182  3A00               	xorlw	0	; case 0
  1601  0183  1903               	skipnz
  1602  0184  2907               	goto	l1239
  1603  0185  3A01               	xorlw	1	; case 1
  1604  0186  1903               	skipnz
  1605  0187  292F               	goto	l1251
  1606  0188  3A03               	xorlw	3	; case 2
  1607  0189  1903               	skipnz
  1608  018A  2971               	goto	l1271
  1609  018B  297E               	goto	l65
  1610                           
  1611                           ;port_hal.c: 172: return outOfBound;
  1612                           ;	Return value of _WritePin is never used
  1613  018C  0008               	return
  1614  018D                     __end_of_WritePin:	
  1615                           
  1616                           	psect	swtext1
  1617  0266                     __pswtext1:	
  1618  0266                     S1369:	
  1619  0266  118A  28E0         	ljmp	l1225
  1620  0268  118A  28E6         	ljmp	l1227
  1621  026A  118A  28EC         	ljmp	l1229
  1622  026C  118A  28F2         	ljmp	l1231
  1623  026E  118A  28F8         	ljmp	l1233
  1624  0270  118A  28FE         	ljmp	l1235
  1625                           
  1626                           	psect	swtext2
  1627  0256                     __pswtext2:	
  1628  0256                     S1371:	
  1629  0256  118A  293E         	ljmp	l1253
  1630  0258  118A  2944         	ljmp	l1255
  1631  025A  118A  294A         	ljmp	l1257
  1632  025C  118A  2950         	ljmp	l1259
  1633  025E  118A  2956         	ljmp	l1261
  1634  0260  118A  295C         	ljmp	l1263
  1635  0262  118A  2962         	ljmp	l1265
  1636  0264  118A  2968         	ljmp	l1267
  1637                           
  1638                           	psect	text2
  1639  028A                     __ptext2:	
  1640 ;; *************** function _UARTTransmit *****************
  1641 ;; Defined at:
  1642 ;;		line 40 in file "uart.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  b               2    5[COMMON] int 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;		None               void
  1649 ;; Registers used:
  1650 ;;		wreg
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1656 ;;      Params:         2       0       0       0
  1657 ;;      Locals:         0       0       0       0
  1658 ;;      Temps:          0       0       0       0
  1659 ;;      Totals:         2       0       0       0
  1660 ;;Total ram usage:        2 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    1
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           
  1671                           ;psect for function _UARTTransmit
  1672  028A                     _UARTTransmit:	
  1673                           
  1674                           ;uart.c: 42: TXREG = b;
  1675                           
  1676                           ;incstack = 0
  1677                           ; Regs used in _UARTTransmit: [wreg]
  1678  028A  0875               	movf	UARTTransmit@b,w
  1679  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1680  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1681  028D  0099               	movwf	25	;volatile
  1682  028E  0008               	return
  1683  028F                     __end_of_UARTTransmit:	
  1684                           
  1685                           	psect	text3
  1686  018D                     __ptext3:	
  1687 ;; *************** function _TimerDaemon *****************
  1688 ;; Defined at:
  1689 ;;		line 14 in file "timing.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  timerTicks      1    wreg     PTR struct SYSTEM_TIMERS
  1692 ;;		 -> main@timerTicks(8), 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  timerTicks      1    6[COMMON] PTR struct SYSTEM_TIMERS
  1695 ;;		 -> main@timerTicks(8), 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;		None               void
  1698 ;; Registers used:
  1699 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1705 ;;      Params:         0       0       0       0
  1706 ;;      Locals:         1       0       0       0
  1707 ;;      Temps:          1       0       0       0
  1708 ;;      Totals:         2       0       0       0
  1709 ;;Total ram usage:        2 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    1
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           
  1720                           ;psect for function _TimerDaemon
  1721  018D                     _TimerDaemon:	
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in _TimerDaemon: [wreg-fsr0h+status,2+status,0]
  1725                           ;TimerDaemon@timerTicks stored from wreg
  1726  018D  00F6               	movwf	TimerDaemon@timerTicks
  1727                           
  1728                           ;timing.c: 17: INTCONbits.GIE = 0;
  1729  018E  138B               	bcf	11,7	;volatile
  1730                           
  1731                           ;timing.c: 20: if(rawTick == 1)
  1732  018F  0377               	decf	_rawTick,w	;volatile
  1733  0190  1D03               	btfss	3,2
  1734  0191  29F4               	goto	l1101
  1735                           
  1736                           ;timing.c: 21: {
  1737                           ;timing.c: 22: rawTick = 0;
  1738  0192  01F7               	clrf	_rawTick	;volatile
  1739                           
  1740                           ;timing.c: 30: timerTicks->baseClock_msCounter++;
  1741  0193  3001               	movlw	1
  1742  0194  00F5               	movwf	??_TimerDaemon
  1743  0195  0A76               	incf	TimerDaemon@timerTicks,w
  1744  0196  0084               	movwf	4
  1745  0197  0875               	movf	??_TimerDaemon,w
  1746  0198  1383               	bcf	3,7	;select IRP bank0
  1747  0199  0780               	addwf	0,f
  1748                           
  1749                           ;timing.c: 31: timerTicks->baseClock_msTick = !timerTicks->baseClock_msTick;
  1750  019A  0876               	movf	TimerDaemon@timerTicks,w
  1751  019B  3E05               	addlw	5
  1752  019C  0084               	movwf	4
  1753  019D  0800               	movf	0,w
  1754  019E  1D03               	btfss	3,2
  1755  019F  29A2               	goto	u290
  1756  01A0  3001               	movlw	1
  1757  01A1  29A3               	goto	u300
  1758  01A2                     u290:	
  1759  01A2  3000               	movlw	0
  1760  01A3                     u300:	
  1761  01A3  00F5               	movwf	??_TimerDaemon
  1762  01A4  0876               	movf	TimerDaemon@timerTicks,w
  1763  01A5  3E05               	addlw	5
  1764  01A6  0084               	movwf	4
  1765  01A7  0875               	movf	??_TimerDaemon,w
  1766  01A8  0080               	movwf	0
  1767                           
  1768                           ;timing.c: 33: if(timerTicks->baseClock_msCounter == 100)
  1769  01A9  0A76               	incf	TimerDaemon@timerTicks,w
  1770  01AA  0084               	movwf	4
  1771  01AB  3064               	movlw	100
  1772  01AC  0600               	xorwf	0,w
  1773  01AD  1D03               	btfss	3,2
  1774  01AE  29F4               	goto	l1101
  1775                           
  1776                           ;timing.c: 34: {
  1777                           ;timing.c: 35: timerTicks->baseClock_100msCounter++;
  1778  01AF  3001               	movlw	1
  1779  01B0  00F5               	movwf	??_TimerDaemon
  1780  01B1  0876               	movf	TimerDaemon@timerTicks,w
  1781  01B2  3E02               	addlw	2
  1782  01B3  0084               	movwf	4
  1783  01B4  0875               	movf	??_TimerDaemon,w
  1784  01B5  0780               	addwf	0,f
  1785                           
  1786                           ;timing.c: 36: timerTicks->baseClock_100msTick = !timerTicks->baseClock_100msTick;
  1787  01B6  0876               	movf	TimerDaemon@timerTicks,w
  1788  01B7  3E06               	addlw	6
  1789  01B8  0084               	movwf	4
  1790  01B9  0800               	movf	0,w
  1791  01BA  1D03               	btfss	3,2
  1792  01BB  29BE               	goto	u320
  1793  01BC  3001               	movlw	1
  1794  01BD  29BF               	goto	u330
  1795  01BE                     u320:	
  1796  01BE  3000               	movlw	0
  1797  01BF                     u330:	
  1798  01BF  00F5               	movwf	??_TimerDaemon
  1799  01C0  0876               	movf	TimerDaemon@timerTicks,w
  1800  01C1  3E06               	addlw	6
  1801  01C2  0084               	movwf	4
  1802  01C3  0875               	movf	??_TimerDaemon,w
  1803  01C4  0080               	movwf	0
  1804                           
  1805                           ;timing.c: 37: timerTicks->baseClock_msCounter = 0;
  1806  01C5  0A76               	incf	TimerDaemon@timerTicks,w
  1807  01C6  0084               	movwf	4
  1808  01C7  0180               	clrf	0
  1809                           
  1810                           ;timing.c: 39: if(timerTicks->baseClock_100msCounter == 10)
  1811  01C8  0876               	movf	TimerDaemon@timerTicks,w
  1812  01C9  3E02               	addlw	2
  1813  01CA  0084               	movwf	4
  1814  01CB  300A               	movlw	10
  1815  01CC  0600               	xorwf	0,w
  1816  01CD  1D03               	btfss	3,2
  1817  01CE  29F4               	goto	l1101
  1818                           
  1819                           ;timing.c: 40: {
  1820                           ;timing.c: 41: timerTicks->baseClock_1000msCounter++;
  1821  01CF  3001               	movlw	1
  1822  01D0  00F5               	movwf	??_TimerDaemon
  1823  01D1  0876               	movf	TimerDaemon@timerTicks,w
  1824  01D2  3E03               	addlw	3
  1825  01D3  0084               	movwf	4
  1826  01D4  0875               	movf	??_TimerDaemon,w
  1827  01D5  0780               	addwf	0,f
  1828                           
  1829                           ;timing.c: 42: timerTicks->baseClock_1000msTick = !timerTicks->baseClock_1000msTick;
  1830  01D6  0876               	movf	TimerDaemon@timerTicks,w
  1831  01D7  3E07               	addlw	7
  1832  01D8  0084               	movwf	4
  1833  01D9  0800               	movf	0,w
  1834  01DA  1D03               	btfss	3,2
  1835  01DB  29DE               	goto	u350
  1836  01DC  3001               	movlw	1
  1837  01DD  29DF               	goto	u360
  1838  01DE                     u350:	
  1839  01DE  3000               	movlw	0
  1840  01DF                     u360:	
  1841  01DF  00F5               	movwf	??_TimerDaemon
  1842  01E0  0876               	movf	TimerDaemon@timerTicks,w
  1843  01E1  3E07               	addlw	7
  1844  01E2  0084               	movwf	4
  1845  01E3  0875               	movf	??_TimerDaemon,w
  1846  01E4  0080               	movwf	0
  1847                           
  1848                           ;timing.c: 43: timerTicks->baseClock_100msCounter = 0;
  1849  01E5  0876               	movf	TimerDaemon@timerTicks,w
  1850  01E6  3E02               	addlw	2
  1851  01E7  0084               	movwf	4
  1852  01E8  0180               	clrf	0
  1853                           
  1854                           ;timing.c: 45: if(timerTicks->baseClock_1000msCounter == 10)
  1855  01E9  0876               	movf	TimerDaemon@timerTicks,w
  1856  01EA  3E03               	addlw	3
  1857  01EB  0084               	movwf	4
  1858  01EC  300A               	movlw	10
  1859  01ED  0600               	xorwf	0,w
  1860  01EE  1D03               	btfss	3,2
  1861  01EF  29F4               	goto	l1101
  1862                           
  1863                           ;timing.c: 46: timerTicks->baseClock_1000msCounter = 0;
  1864  01F0  0876               	movf	TimerDaemon@timerTicks,w
  1865  01F1  3E03               	addlw	3
  1866  01F2  0084               	movwf	4
  1867  01F3  0180               	clrf	0
  1868  01F4                     l1101:	
  1869                           
  1870                           ;timing.c: 47: }
  1871                           ;timing.c: 49: }
  1872                           ;timing.c: 50: }
  1873                           ;timing.c: 52: INTCONbits.GIE = 1;
  1874  01F4  178B               	bsf	11,7	;volatile
  1875  01F5  0008               	return
  1876  01F6                     __end_of_TimerDaemon:	
  1877                           
  1878                           	psect	text4
  1879  0233                     __ptext4:	
  1880 ;; *************** function _InitializeUART *****************
  1881 ;; Defined at:
  1882 ;;		line 14 in file "uart.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;		None               void
  1889 ;; Registers used:
  1890 ;;		wreg, status,2
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1896 ;;      Params:         0       0       0       0
  1897 ;;      Locals:         0       0       0       0
  1898 ;;      Temps:          0       0       0       0
  1899 ;;      Totals:         0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    1
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_main
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function _InitializeUART
  1912  0233                     _InitializeUART:	
  1913                           
  1914                           ;uart.c: 17: TRISBbits.TRISB5 = 1;
  1915                           
  1916                           ;incstack = 0
  1917                           ; Regs used in _InitializeUART: [wreg+status,2]
  1918  0233  1683               	bsf	3,5	;RP0=1, select bank1
  1919  0234  1303               	bcf	3,6	;RP1=0, select bank1
  1920  0235  1686               	bsf	6,5	;volatile
  1921                           
  1922                           ;uart.c: 18: TRISBbits.TRISB7 = 0;
  1923  0236  1386               	bcf	6,7	;volatile
  1924                           
  1925                           ;uart.c: 21: SPBRG = 0xCF;
  1926  0237  30CF               	movlw	207
  1927  0238  0099               	movwf	25	;volatile
  1928                           
  1929                           ;uart.c: 22: SPBRGH = 0x00;
  1930  0239  019A               	clrf	26	;volatile
  1931                           
  1932                           ;uart.c: 25: TXSTAbits.TXEN = 1;
  1933  023A  1698               	bsf	24,5	;volatile
  1934                           
  1935                           ;uart.c: 26: TXSTAbits.SYNC = 0;
  1936  023B  1218               	bcf	24,4	;volatile
  1937                           
  1938                           ;uart.c: 27: TXSTAbits.BRGH = 1;
  1939  023C  1518               	bsf	24,2	;volatile
  1940                           
  1941                           ;uart.c: 30: RCSTAbits.SPEN = 1;
  1942  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1943  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1944  023F  1798               	bsf	24,7	;volatile
  1945                           
  1946                           ;uart.c: 31: RCSTAbits.CREN = 1;
  1947  0240  1618               	bsf	24,4	;volatile
  1948                           
  1949                           ;uart.c: 34: BAUDCTLbits.BRG16 = 1;
  1950  0241  1683               	bsf	3,5	;RP0=1, select bank1
  1951  0242  1303               	bcf	3,6	;RP1=0, select bank1
  1952  0243  159B               	bsf	27,3	;volatile
  1953                           
  1954                           ;uart.c: 37: PIE1bits.RCIE = 0;
  1955  0244  128C               	bcf	12,5	;volatile
  1956  0245  0008               	return
  1957  0246                     __end_of_InitializeUART:	
  1958                           
  1959                           	psect	text5
  1960  0216                     __ptext5:	
  1961 ;; *************** function _InitApp *****************
  1962 ;; Defined at:
  1963 ;;		line 20 in file "user.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;		None               void
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1977 ;;      Params:         0       0       0       0
  1978 ;;      Locals:         0       0       0       0
  1979 ;;      Temps:          0       0       0       0
  1980 ;;      Totals:         0       0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function _InitApp
  1993  0216                     _InitApp:	
  1994                           
  1995                           ;user.c: 23: TRISC = 0x00, TRISA = 0x00, TRISB = 0x00;
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _InitApp: [wreg+status,2+status,0]
  1999  0216  1683               	bsf	3,5	;RP0=1, select bank1
  2000  0217  1303               	bcf	3,6	;RP1=0, select bank1
  2001  0218  0187               	clrf	7	;volatile
  2002  0219  0185               	clrf	5	;volatile
  2003  021A  0186               	clrf	6	;volatile
  2004                           
  2005                           ;user.c: 24: PORTC = 0x00, PORTA = 0x00, PORTB = 0x00;
  2006  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2007  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2008  021D  0187               	clrf	7	;volatile
  2009  021E  0185               	clrf	5	;volatile
  2010  021F  0186               	clrf	6	;volatile
  2011                           
  2012                           ;user.c: 25: WPUA = 0x00;
  2013  0220  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0221  1303               	bcf	3,6	;RP1=0, select bank1
  2015  0222  0195               	clrf	21	;volatile
  2016                           
  2017                           ;user.c: 29: ANSEL = 0x00;
  2018  0223  1283               	bcf	3,5	;RP0=0, select bank2
  2019  0224  1703               	bsf	3,6	;RP1=1, select bank2
  2020  0225  019E               	clrf	30	;volatile
  2021                           
  2022                           ;user.c: 30: ANSELH = 0x00;
  2023  0226  019F               	clrf	31	;volatile
  2024                           
  2025                           ;user.c: 82: INTCONbits.GIE = 1;
  2026  0227  178B               	bsf	11,7	;volatile
  2027                           
  2028                           ;user.c: 85: INTCONbits.PEIE = 1;
  2029  0228  170B               	bsf	11,6	;volatile
  2030                           
  2031                           ;user.c: 112: OPTION_REGbits.T0CS = 0;
  2032  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2033  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2034  022B  1281               	bcf	1,5	;volatile
  2035                           
  2036                           ;user.c: 116: OPTION_REGbits.PSA = 0;
  2037  022C  1181               	bcf	1,3	;volatile
  2038                           
  2039                           ;user.c: 117: OPTION_REGbits.PS = 0x01;
  2040  022D  0801               	movf	1,w	;volatile
  2041  022E  39F8               	andlw	-8
  2042  022F  3801               	iorlw	1
  2043  0230  0081               	movwf	1	;volatile
  2044                           
  2045                           ;user.c: 120: INTCONbits.T0IE = 1;
  2046  0231  168B               	bsf	11,5	;volatile
  2047  0232  0008               	return
  2048  0233                     __end_of_InitApp:	
  2049                           
  2050                           	psect	text6
  2051  0283                     __ptext6:	
  2052 ;; *************** function _ConfigureOscillator *****************
  2053 ;; Defined at:
  2054 ;;		line 18 in file "system.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;		None               void
  2061 ;; Registers used:
  2062 ;;		None
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2068 ;;      Params:         0       0       0       0
  2069 ;;      Locals:         0       0       0       0
  2070 ;;      Temps:          0       0       0       0
  2071 ;;      Totals:         0       0       0       0
  2072 ;;Total ram usage:        0 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    1
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           
  2083                           ;psect for function _ConfigureOscillator
  2084  0283                     _ConfigureOscillator:	
  2085                           
  2086                           ;system.c: 26: OSCCONbits.IRCF2 = 1;
  2087                           
  2088                           ;incstack = 0
  2089                           ; Regs used in _ConfigureOscillator: []
  2090  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2091  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2092  0285  170F               	bsf	15,6	;volatile
  2093                           
  2094                           ;system.c: 27: OSCCONbits.IRCF1 = 1;
  2095  0286  168F               	bsf	15,5	;volatile
  2096                           
  2097                           ;system.c: 28: OSCCONbits.IRCF0 = 1;
  2098  0287  160F               	bsf	15,4	;volatile
  2099                           
  2100                           ;system.c: 30: OSCCONbits.SCS = 1;
  2101  0288  140F               	bsf	15,0	;volatile
  2102  0289  0008               	return
  2103  028A                     __end_of_ConfigureOscillator:	
  2104                           
  2105                           	psect	text7
  2106  01F6                     __ptext7:	
  2107 ;; *************** function _isr *****************
  2108 ;; Defined at:
  2109 ;;		line 25 in file "interrupts.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;		None               void
  2116 ;; Registers used:
  2117 ;;		wreg
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2123 ;;      Params:         0       0       0       0
  2124 ;;      Locals:         0       0       0       0
  2125 ;;      Temps:          5       0       0       0
  2126 ;;      Totals:         5       0       0       0
  2127 ;;Total ram usage:        5 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		Interrupt level 1
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           
  2137                           ;psect for function _isr
  2138  01F6                     _isr:	
  2139                           
  2140                           ;interrupts.c: 37: if(INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1)
  2141  01F6  1A8B               	btfsc	11,5	;volatile
  2142  01F7  1D0B               	btfss	11,2	;volatile
  2143  01F8  29FF               	goto	i1l121
  2144                           
  2145                           ;interrupts.c: 38: {
  2146                           ;interrupts.c: 40: rawTick = 1;
  2147  01F9  3001               	movlw	1
  2148  01FA  00F0               	movwf	??_isr
  2149  01FB  0870               	movf	??_isr,w
  2150  01FC  00F7               	movwf	_rawTick	;volatile
  2151                           
  2152                           ;interrupts.c: 41: INTCONbits.T0IF = 0;
  2153  01FD  110B               	bcf	11,2	;volatile
  2154                           
  2155                           ;interrupts.c: 42: }
  2156  01FE  2A0B               	goto	i1l127
  2157  01FF                     i1l121:	
  2158                           
  2159                           ;interrupts.c: 44: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  2160  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2161  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2162  0201  1C0C               	btfss	12,0	;volatile
  2163  0202  2A09               	goto	i1l123
  2164  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0205  1C0C               	btfss	12,0	;volatile
  2167  0206  2A09               	goto	i1l123
  2168                           
  2169                           ;interrupts.c: 45: {
  2170                           ;interrupts.c: 46: PIR1bits.TMR1IF = 0;
  2171  0207  100C               	bcf	12,0	;volatile
  2172                           
  2173                           ;interrupts.c: 47: }
  2174  0208  2A0B               	goto	i1l127
  2175  0209                     i1l123:	
  2176                           
  2177                           ;interrupts.c: 49: else if (PIR1bits.RCIF == 1)
  2178  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2179  020A  080C               	movf	12,w	;volatile
  2180  020B                     i1l127:	
  2181                           ;interrupts.c: 54: else
  2182                           ;interrupts.c: 55: {
  2183                           
  2184                           ;interrupts.c: 50: {
  2185                           ;interrupts.c: 52: }
  2186                           
  2187  020B  0874               	movf	??_isr+4,w
  2188  020C  00FF               	movwf	127
  2189  020D  0873               	movf	??_isr+3,w
  2190  020E  008A               	movwf	10
  2191  020F  0872               	movf	??_isr+2,w
  2192  0210  0084               	movwf	4
  2193  0211  0E71               	swapf	(??_isr+1)^(0+-128),w
  2194  0212  0083               	movwf	3
  2195  0213  0EFE               	swapf	126,f
  2196  0214  0E7E               	swapf	126,w
  2197  0215  0009               	retfie
  2198  0216                     __end_of_isr:	
  2199  007E                     btemp	set	126	;btemp
  2200  007E                     wtemp	set	126
  2201  007E                     wtemp0	set	126
  2202  0080                     wtemp1	set	128
  2203  0082                     wtemp2	set	130
  2204  0084                     wtemp3	set	132
  2205  0086                     wtemp4	set	134
  2206  0088                     wtemp5	set	136
  2207  007F                     wtemp6	set	127
  2208  007E                     ttemp	set	126
  2209  007E                     ttemp0	set	126
  2210  0081                     ttemp1	set	129
  2211  0084                     ttemp2	set	132
  2212  0087                     ttemp3	set	135
  2213  007F                     ttemp4	set	127
  2214  007E                     ltemp	set	126
  2215  007E                     ltemp0	set	126
  2216  0082                     ltemp1	set	130
  2217  0086                     ltemp2	set	134
  2218  0080                     ltemp3	set	128
  2219                           
  2220                           	psect	intentry
  2221  0004                     __pintentry:	
  2222                           ;incstack = 0
  2223                           ; Regs used in _isr: [wreg]
  2224                           
  2225  0004                     interrupt_function:	
  2226  007E                     saved_w	set	btemp
  2227  0004  00FE               	movwf	btemp
  2228  0005  0E03               	swapf	3,w
  2229  0006  00F1               	movwf	??_isr+1
  2230  0007  0804               	movf	4,w
  2231  0008  00F2               	movwf	??_isr+2
  2232  0009  080A               	movf	10,w
  2233  000A  00F3               	movwf	??_isr+3
  2234  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2235  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2236  000D  087F               	movf	btemp+1,w
  2237  000E  00F4               	movwf	??_isr+4
  2238  000F  118A  29F6         	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     27      54
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TimerDaemon@timerTicks	PTR struct SYSTEM_TIMERS size(1) Largest target is 8
		 -> main@timerTicks(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_TimerDaemon
    _main->_UARTTransmit
    _main->_WritePin

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WritePin

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    2192
                                              2 BANK0     25    25      0
                _ConfigureOscillator
                            _InitApp
                     _InitializeUART
                        _TimerDaemon
                       _UARTTransmit
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _WritePin                                             4     2      2    1166
                                              5 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _UARTTransmit                                         2     0      2      86
                                              5 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TimerDaemon                                          2     2      0     368
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitializeUART                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _InitializeUART
   _TimerDaemon
   _UARTTransmit
   _WritePin

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      36       3       67.5%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      10        0.0%
ABS                  0      0      3E       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon May 25 10:48:32 2015

                           pc 0002                   __CFG_CP$OFF 0000                            l43 0104  
                          l52 012C                            l64 016E                            l65 017E  
                          fsr 0004                           l218 00CE                           u300 01A3  
                         u320 01BE                           u330 01BF                           u350 01DE  
                         u510 0066                           u360 01DF                           u290 01A2  
                __CFG_CPD$OFF 0000                           u570 00CA                           u490 003B  
                         u580 00CB                           u565 00C1                           _isr 01F6  
                         fsr0 0004                           indf 0000                  __CFG_IESO$ON 0000  
                        S1371 0256                          S1369 0266                          l1101 01F4  
                        l1231 00F2                          l1311 0092                          l1241 0114  
                        l1233 00F8                          l1225 00E0                          l1321 00B7  
                        l1243 011A                          l1251 012F                          l1235 00FE  
                        l1227 00E6                          l1315 009B                          l1307 007F  
                        l1261 0156                          l1253 013E                          l1245 0120  
                        l1229 00EC                          l1263 015C                          l1255 0144  
                        l1271 0171                          l1247 0126                          l1239 0107  
                        l1327 00D3                          l1265 0162                          l1257 014A  
                        l1267 0168                          l1259 0150                          l1275 0181  
                        ?_isr 0070         TimerDaemon@timerTicks 0076                          _WPUA 0095  
               __CFG_FCMEN$ON 0000                          _main 0028                          _test 004B  
                        btemp 007E                 __CFG_BOREN$ON 0000                          ltemp 007E  
                        start 0011                          ttemp 007E                          wtemp 007E  
             __end_of_InitApp 0233                         ??_isr 0070                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _ANSEL 011E                         i1l121 01FF  
                       i1l123 0209                         i1l127 020B                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                main@buttonOK 0026                         _TXREG 0019           _ConfigureOscillator 0283  
                       main@i 0030                         pclath 000A                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F          ?_ConfigureOscillator 0070                __CFG_MCLRE$OFF 0000  
             __initialization 0013       __size_of_InitializeUART 0013                  __end_of_main 00DB  
            main@debugTrigger 0032              WritePin@portName 0020                        ??_main 0022  
                      _ANSELH 011F              __end_of_WritePin 018D                        _SPBRGH 009A  
                   ??_InitApp 0075         ??_ConfigureOscillator 0075                __CFG_PWRTE$OFF 0000  
               ??_TimerDaemon 0075                        saved_w 007E       __end_of__initialization 0025  
              __pcstackCOMMON 0070                  __pidataBANK0 0272                _OPTION_REGbits 0081  
         __end_of_TimerDaemon 01F6                    __pbssBANK0 003B                _InitializeUART 0233  
                  __pmaintext 0028                    __pintentry 0004                     ?_WritePin 0075  
                     _InitApp 0216        __end_of_InitializeUART 0246                 ?_UARTTransmit 0075  
                 _TimerDaemon 018D                    ??_WritePin 0077                       __ptext1 00DB  
                     __ptext2 028A                       __ptext3 018D                       __ptext4 0233  
                     __ptext5 0216                       __ptext6 0283                       __ptext7 01F6  
                __size_of_isr 0020                       _rawTick 0077                       clrloop0 027C  
        end_of_initialization 0025                main@timerTicks 0033               ?_InitializeUART 0070  
              ??_UARTTransmit 0077                     _RCSTAbits 0018                     _PORTAbits 0005  
                   _PORTBbits 0006                     _PORTCbits 0007                     _TRISBbits 0086  
 __end_of_ConfigureOscillator 028A                     _TXSTAbits 0098                   _BAUDCTLbits 009B  
         start_initialization 0013               WritePin@pinName 0075                   __end_of_isr 0216  
          WritePin@outOfBound 0021                    init_fetch0 0246                   __pdataBANK0 004D  
           __size_of_WritePin 00B2                   __pbssCOMMON 0077                     ___latbits 0001  
               __pcstackBANK0 0020          __end_of_UARTTransmit 028F                 WritePin@state 0076  
                    ?_InitApp 0070                  ?_TimerDaemon 0070                     __pswtext1 0266  
                   __pswtext2 0256              ??_InitializeUART 0075             interrupt_function 0004  
                   clear_ram0 027B                      _PIE1bits 008C                      _PIR1bits 000C  
                   main@F1555 0043                     main@F1559 004D                 UARTTransmit@b 0075  
            __size_of_InitApp 001D                      _WritePin 00DB         __size_of_UARTTransmit 0005  
               __size_of_main 00B3  __size_of_ConfigureOscillator 0007                  _UARTTransmit 028A  
                    main@temp 0027          __size_of_TimerDaemon 0069                    _INTCONbits 000B  
                    init_ram0 024A                      intlevel1 0000                    _OSCCONbits 008F  
                 _timerTicksX 003B            __CFG_FOSC$INTRCCLK 0000  
